// package main

// import "fmt"
// func main(){
// 	ch := make(chan int)
// 	// ch <- 1
// 	// ch <- 2
// 	fmt.Println(<- ch)
// 	// fmt.Println(<- ch)
// 	// v, ok := <- ch
// 	// if !ok {
// 	// 	fmt.Println("Not ok")
// 	// } else {
// 	// 	fmt.Println(v)
// 	// }
// }


// package main

// import (
// 	"fmt"
// )

// func fibonacci(n int, c chan int) {
// 	x, y := 0, 1
// 	for i := 0; i < n; i++ {
// 		c <- x
// 		x, y = y, x+y
// 	}
// 	close(c)
// }

// func main() {
// 	c := make(chan int, 10)
// 	go fibonacci(cap(c), c)
// 	for i := range c {
// 		fmt.Println(i)
// 	}
// }

package main

import "fmt"

func fibonacci(c, quit chan int) {
	x, y := 0, 1
	for {
		select {
		case c <- x:
			x, y = y, x+y
		case <-quit:
			fmt.Println("quit")
			return
		}
	}
}

func main() {
	c := make(chan int)
	quit := make(chan int)
	go func() {
		for i := 0; i < 10; i++ {
			fmt.Println(<-c)
		}
		quit <- 0
	}()
	fibonacci(c, quit)
}

